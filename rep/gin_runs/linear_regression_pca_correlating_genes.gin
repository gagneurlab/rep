import rep.models
import rep.datasets
import rep.metrics
import rep.trainer
import rep.preprocessing_new

# ==================================================================
# model.gin
# --------------------------------------------
# model
train.trainer_cls = @SklearnPipelineTrainer
train.model = @lasso_model()

lasso_model.dim_reducer = @sk.decomposition.PCA
sk.decomposition.PCA.n_components = 25
lasso_model.cv = 5
lasso_model.max_iter = 20
lasso_model.normalize = False
lasso_model.n_jobs = 1



# ==================================================================
# problem.gin
# --------------------------------------------
# data
train.data = @rep_blood_expression()  # use the default train and valid chromosomes
rep_blood_expression.x_inputs_h5 = "/s/project/rep/processed/gtex/input_data/X_inputs_pc_onlyblood.h5"
rep_blood_expression.y_targets_h5 = "/s/project/rep/processed/gtex/input_data/Y_targets_pc_onlyblood.h5"
rep_blood_expression.label = "pc_blood"
rep_blood_expression.gene_list = @load_list()
load_list.filename = "/s/project/rep/processed/gtex/input_data/genes_subset/correlating_genes_blood_muscle_015.txt"

# --------------------------------------------
# evaluation
train.eval_metric = @rep_metric
train.eval_train = True
